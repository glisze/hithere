# t/21 xen-0-busybox (c) Gunter Liszewski -*- mode: org; -*-
* A minimal busybox system (initrd)
  The ~xen-0-busybox~ GNU Guix package provides the operating system
for this example. The ~cpio~ and ~gzip~ applets are used to copy ~busybox~,
and it's ~sh~ applet out into ~i/i0.cpio.gz~. 

** Making this minimal ramdisk
 Enter the ~busybox~ environment  
: guix environemnt --load-path=here xen-0-busybox
 Use only ~busybox~ builtins
: PATH= $( which busybox ) sh
 Define the shell function called ~i0_items~
: . Fn/i0_items

 Copy those items out to the ~i0.cpio.gz~ archive.  (Note:
GNU Guix restricts permissions of its store items.  The actual
process, for now, involved a ~cp -a $( i0_itmes ) i/~ and
adjustments to allow a successful ~cpio -i~.)
: i0_items | cpio -o -H newc | gzip -9 > i/i0.cpio.gz

** Create a machine
  The Xen machine [[to_xen/0.cfg]] now boots into its early boot state.
  Enter the ~xen-0-tools~ environment
: guix environment --load-path=here --ad-hoc xen-0-tools perl
  Start ~xencommons~
: sudo $( dirname $( dirname $( readlink -e $( which xl ))))/etc/init.d/xencommons start
  Create this machine
: sudo xl create -c to_xen/0.cfg
